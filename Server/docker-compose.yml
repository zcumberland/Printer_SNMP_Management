version: "3"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile.server
    container_name: printer-server-api
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DB_USER=postgres
      - DB_PASSWORD=postgres_password
      - DB_HOST=db
      - DB_NAME=printer_monitor
      - DB_PORT=5432
      - JWT_SECRET=your_secure_jwt_secret
      - DEFAULT_ADMIN_PASSWORD=admin123
    depends_on:
      - db
    networks:
      - printer-network

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: printer-server-frontend
    restart: unless-stopped
    ports:
      - "80:80"
    depends_on:
      - api
    networks:
      - printer-network

  db:
    image: postgres:14-alpine
    container_name: printer-server-db
    restart: unless-stopped
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres_password
      - POSTGRES_DB=printer_monitor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - printer-network

networks:
  printer-network:
    driver: bridge

volumes:
  postgres_data:
